[tool.poetry]
name = "pydantic2zod"
version = "0.1.0"
description = "Pydantic to zod declaration compiler."
authors = ["Povilas Balciunas <povilas@argyle.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
typing-extensions = "^4"
libcst = "^0.4.9"
networkx = "^2 || ^3"
typer = ">=0.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
taskipy = "^1.11.0"
black = "^23.7.0"
pydantic = "^2.0.2"
snapshottest = "^0.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
test = "pytest --cov=pydantic2zod tests -vv"
check_types = "(npm list -g pyright@1.1.306 || npm install -g pyright@1.1.306) && pyright"
fmt = "black pydantic2zod tests"
check_fmt = "black --check ."

[tool.black]
exclude = "tests/snapshots"

[tool.pyright]
include = ["pydantic2zod", "tests"]
pythonVersion = "3.10"
reportIncompatibleVariableOverride = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportUnusedImport = true
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportOptionalSubscript = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportUntypedBaseClass = true
reportPrivateUsage = true
reportUntypedClassDecorator = true
reportConstantRedefinition = true
reportInvalidTypeVarUse = true
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportAssertAlwaysTrue = true
reportUnusedCoroutine = true
reportMatchNotExhaustive = true
